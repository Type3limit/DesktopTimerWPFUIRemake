<Page
    x:Class="DesktopTimer.Views.TimerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:con="clr-namespace:DesktopTimer.Helpers"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:DesktopTimer.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:DesktopTimer.Models"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    x:Name="rootPage"
    Title="TimerPage"
    d:DataContext="{d:DesignInstance Type={x:Type model:MainWorkModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Page.Resources>
        <con:SolidColorConverters x:Key="ColorToSolidBrushConveter" />
        <con:PercentValueConverters x:Key="PercentValueConverter" />
        <con:BoolToVisiableConverters x:Key="Bool2VisiConverter" />
        <con:BoolToReverseVisiableConverters x:Key="Bool2ReverseVisiConverter" />
    </Page.Resources>



    <Border
        x:Name="OuterBorder"
        Width="{Binding ElementName=rootPage, Path=ActualWidth}"
        Height="{Binding ElementName=rootPage, Path=ActualHeight}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center">
        <Grid>
            <Frame
                x:Name="ContentFrame"
                Panel.ZIndex="0"
                DataContext="{Binding ElementName=rootPage, Path=DataContext}"
                Navigating="ContentFrame_Navigating"
                Opacity="{Binding DisplaySetting.BackgroundImageOpacity, UpdateSourceTrigger=PropertyChanged}" />

            <Frame
                x:Name="UpperLayerFrame"
                Panel.ZIndex="1"
                DataContext="{Binding ElementName=rootPage, Path=DataContext}"
                IsHitTestVisible="False" />

            <Border
                x:Name="TimeBorder"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Panel.ZIndex="1"
                Background="{Binding DisplaySetting.TimerBackgroundColor, Converter={StaticResource ColorToSolidBrushConveter}, UpdateSourceTrigger=PropertyChanged}"
                CornerRadius="{Binding DisplaySetting.TimerBackgroundCornorRadius, UpdateSourceTrigger=PropertyChanged}"
                MouseMove="Border_MouseMove"
                Opacity="{Binding DisplaySetting.TimerBackgroundOpacity, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding DisplaySetting.IsTimerBorderVisiable, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Margin="5" VerticalAlignment="Center">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{Binding DisplaySetting.SelectedFontFamily, UpdateSourceTrigger=PropertyChanged}"
                        FontSize="{Binding DisplaySetting.TimeCenterFontSize, UpdateSourceTrigger=PropertyChanged}"
                        Foreground="{Binding DisplaySetting.TimeFontColor, Converter={StaticResource ColorToSolidBrushConveter}, UpdateSourceTrigger=PropertyChanged}"
                        Text="{Binding DisplaySetting.CurrentTimeStr, UpdateSourceTrigger=PropertyChanged}"
                        TextTrimming="CharacterEllipsis"
                        UseLayoutRounding="True" />
                    <TextBlock
                        Margin="0,5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="{Binding DisplaySetting.SelectedWeekendFontFamily, UpdateSourceTrigger=PropertyChanged}"
                        FontSize="{Binding DisplaySetting.WeekendCenterFontSize, UpdateSourceTrigger=PropertyChanged}"
                        Foreground="{Binding DisplaySetting.WeekendFontColor, Converter={StaticResource ColorToSolidBrushConveter}, UpdateSourceTrigger=PropertyChanged}"
                        Text="{Binding DisplaySetting.CurrentWeekTimeStr, UpdateSourceTrigger=PropertyChanged}"
                        TextTrimming="CharacterEllipsis"
                        UseLayoutRounding="True" />
                </StackPanel>
                <Border.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform x:Name="CurTransForm" />
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Width>
                    <MultiBinding Converter="{StaticResource PercentValueConverter}">
                        <MultiBinding.Bindings>
                            <Binding Path="DisplaySetting.TimerBackgroundWidth" />
                            <Binding ElementName="OuterBorder" Path="ActualWidth" />
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </Border.Width>
                <Border.Height>
                    <MultiBinding Converter="{StaticResource PercentValueConverter}">
                        <MultiBinding.Bindings>
                            <Binding Path="DisplaySetting.TimerBackgroundHeight" />
                            <Binding ElementName="OuterBorder" Path="ActualHeight" />
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </Border.Height>
            </Border>
        </Grid>
    </Border>



    <Page.ContextMenu>
        <ContextMenu Opened="ContextMenu_Opened">

            <ui:MenuItem
                x:Name="NextBackground"
                Command="{Binding DisplaySetting.RequestFlushCommand}"
                Header="刷新背景"
                Visibility="{Binding BackgroundImageRequest.IsPictureBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}" />

            <ui:MenuItem
                Command="{Binding DisplaySetting.CollectCurrentImageCommand}"
                Header="收藏背景"
                Visibility="{Binding BackgroundImageRequest.IsPictureBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}" />

            <ui:MenuItem
                Command="{Binding DisplaySetting.OpenExtraSettingCommand}"
                Header="打开网页地址"
                Visibility="{Binding BackgroundImageRequest.IsWebBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}" />

            <ui:MenuItem
                Command="{Binding DisplaySetting.OpenExtraSettingCommand}"
                Header="打开视频选项"
                Visibility="{Binding BackgroundImageRequest.IsVideoBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}" />

            <ui:MenuItem
                Command="{Binding BackgroundImageRequest.NextVideoCommand}"
                Header="下一条视频"
                Visibility="{Binding BackgroundImageRequest.IsVideoBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}" />


            <ui:MenuItem
                x:Name="OpenSetting"
                Command="{Binding DisplaySetting.OpenSettingCommand}"
                Header="打开设置" />

            <ui:MenuItem Command="{Binding DisplaySetting.SetTopMostCommand}">
                <ui:MenuItem.Header>
                    <StackPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=DataContext}" Orientation="Horizontal">
                        <ui:ToggleSwitch Foreground="White" IsChecked="{Binding DisplaySetting.IsTopMost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            Margin="5,0"
                            VerticalAlignment="Center"
                            Text="窗口置顶" />
                    </StackPanel>
                </ui:MenuItem.Header>
            </ui:MenuItem>

            <ui:MenuItem Command="{Binding DisplaySetting.SetBackgroundfreshCommand}" Visibility="{Binding BackgroundImageRequest.IsPictureBackground, Converter={StaticResource Bool2VisiConverter}, UpdateSourceTrigger=PropertyChanged}">
                <ui:MenuItem.Header>
                    <StackPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}, Path=DataContext}" Orientation="Horizontal">
                        <ui:ToggleSwitch Foreground="White" IsChecked="{Binding DisplaySetting.ShouldPauseFresh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            Margin="5,0"
                            VerticalAlignment="Center"
                            Text="暂停/继续刷新" />
                    </StackPanel>
                </ui:MenuItem.Header>
            </ui:MenuItem>

            <ui:MenuItem
                x:Name="CloseProgram"
                Command="{Binding ExitProgramCommand}"
                Header="关闭程序" />

        </ContextMenu>
    </Page.ContextMenu>


</Page>
